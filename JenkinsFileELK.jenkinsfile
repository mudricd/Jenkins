#!groovyâ€‹
pipeline {
    agent any
    stages {
        stage('Build test environment'){
            steps{
                build job: 'CF'

                script{
                     timeout(time:5, unit:'DAYS'){   
                       stage ('Verify'){
                            try {
                                input id: 'Deploy', message: 'Approve prod deployment', ok: 'Proceed'
                                echo 'You pressed Proceed' 
                                build job: 'CF delete'                  
                                                   
                            } catch (error) {
                                echo 'You pressed Abort'
                                build job: 'CF delete'
                                error('Deployment aborted by user')
                            }
                        }
                    }
                }
            }
        }
        stage('Deploy Elasticsearch'){
            steps {
                ansibleTower(
                towerServer: 'TestTower',
                templateType: 'job',
                jobTemplate: 'Elasticsearch',
                importTowerLogs: true,
                inventory: 'AWS dynamic inventory',
                jobTags: 'jobTags',
                skipJobTags: '',
                limit: '',
                removeColor: false,
                verbose: true,
                credential: '',
                extraVars: '''---
                my_var:  "Jenkins Test"''',
                async: false
                )
            }
            post {
                success {
                    echo 'EVERYTHING IS OK!'
                }
            }
        }
        stage('Deploy Kibana'){
            steps {
                ansibleTower(
                    towerServer: 'TestTower',
                    templateType: 'job',
                    jobTemplate: 'Kibana',
                    importTowerLogs: true,
                    inventory: 'AWS dynamic inventory',
                    jobTags: '',
                    skipJobTags: '',
                    limit: '',
                    removeColor: false,
                    verbose: true,
                    credential: '',
                    extraVars: '''---
                    my_var:  "Jenkins Test Kibana"''',
                    async: false
                )
    }
}
        stage('Deploy Logstash'){
            steps{
                ansibleTower(
                    towerServer: 'TestTower',
                    templateType: 'job',
                    jobTemplate: 'Logstash',
                    importTowerLogs: true,
                    inventory: 'AWS dynamic inventory',
                    jobTags: '',
                    skipJobTags: '',
                    limit: '',
                    removeColor: false,
                    verbose: true,
                    credential: '',
                    extraVars: '''---
                    my_var:  "Jenkins Test Kibana"''',
                    async: false
                )
            }
            post {
                success {
                    echo 'Code deployed successfully!'
                }

                failure {
                    echo 'Deployment failed!'
                }
           }
       }
    }
}
